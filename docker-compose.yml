services:
  # Contenedor para pruebas
  test-container:
    build:
      context: .
      dockerfile: Dockerfile.test
    profiles:
      - testing
    networks:
      - shared-network

  # Servidor de Aplicaci√≥n
  app-server:
    build:
      context: .
      dockerfile: Dockerfile.app
    ports:
      - "8080:8080"
    profiles:
      - application
    networks:
      - shared-network

# Servidor Git
  git-sync:
    image: alpine/git
    volumes:
      - shared-data:/data
    working_dir: /data
    entrypoint: |
      sh -c "
      if [ ! -d .git ]; then
        git clone https://github.com/usuario/repositorio.git .
      else
        git fetch origin
        LOCAL=$(git rev-parse @)
        REMOTE=$(git rev-parse @{u})
        if [ \"$LOCAL\" != \"$REMOTE\" ]; then
          git pull
        fi
      fi
      "
    command: []
    networks:
      - shared-network
  
  # Contenedor de Cypress
  cypress:
    image: cypress/included
    volumes:
      - shared-data:/app
    working_dir: /app
    profiles:
      - automation
    
  # Servidor de Jenkins
  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "8081:8080"       
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker-compose:/usr/bin/docker-compose
    profiles:
      - jenkins
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    networks:
      - shared-network

volumes:
  jenkins_home:
  shared-data:

networks:
  shared-network:
    driver: bridge
